name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect:
    name: Detect changes
    runs-on: ubuntu-latest
    outputs:
      client: ${{ steps.filter.outputs.client }}
      api: ${{ steps.filter.outputs.api }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Filter paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          # Add more groups here if you later split things (docs, infra, etc.)
          filters: |
            client:
              - 'client/**'
            api:
              - 'api/**'

  client:
    name: Client (build)
    if: ${{ needs.detect.outputs.client == 'true' }}
    needs: detect
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: client
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: client/package-lock.json

      - name: Install deps
        run: npm ci || npm install

      - name: Build
        run: npm run build

      - name: Verify dist exists
        run: test -d dist && echo "✅ dist/ built"

  api:
    name: API (checks)
    if: ${{ needs.detect.outputs.api == 'true' }}
    needs: detect
    runs-on: ubuntu-latest
    timeout-minutes: 5
    defaults:
      run:
        working-directory: api
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Sanity import serverless function
        shell: bash
        run: |
          set -e
          if [ -f ./api/search.js ]; then
            node -e "import('./api/search.js').then(()=>console.log('✅ api/search.js import OK')).catch(e=>{console.error(e);process.exit(1)})"
          elif [ -f ./api/api/search.js ]; then
            node -e "import('./api/api/search.js').then(()=>console.log('✅ api/api/search.js import OK')).catch(e=>{console.error(e);process.exit(1)})"
          else
            echo "❌ No serverless function found at api/search.js or api/api/search.js"
            exit 1
          fi
